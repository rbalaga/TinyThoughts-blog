{"version":3,"sources":["services/index.js","store/actions/index.js","components/Input.js","components/Select.js","components/Text.js","components/AddPost.js","components/ErrorPopup.jsx","components/AccountNav.js","components/Header.js","components/Categories.js","components/DeletePostButton.js","components/Post.js","components/Posts.js","components/Protected.js","components/Signin.js","components/Signup.js","components/Unprotected.js","App.js","serviceWorker.js","store/reducers/posts.js","store/reducers/users.js","store/reducers/errors.js","store/index.js","server/index.js","index.js"],"names":["responseErrorHandler","response","ok","getToken","Promise","resolve","reject","token","window","localStorage","getItem","getAllPosts","fetch","then","res","json","actionTypes","SIGNIN_SUCCESS","SIGNUP_SUCCESS","INIT_SUCCESS","INIT_FAILURE","SIGNUP_FAILURE","SIGNOUT_SUCCESS","SIGNOUT_FAILURE","GET_POSTS_SUCCESS","DELETE_POSTS_SUCCESS","GET_CATEGORIES_SUCCESS","ADD_POST_SUCCESS","GET_POSTS_FAILURE","GET_CATEGORIES_FAILURE","SIGNIN_FAILURE","ADD_POST_FAILURE","DELETE_POST_FAILURE","SET_ERROR_MESSAGE","signIn","email","password","history","location","dispatch","method","cache","headers","body","JSON","stringify","data","user","setItem","catch","error","doSignIn","type","from","state","pathname","replace","signUp","name","dateJoined","Date","doSignUp","push","signOut","removeItem","initUserState","getUser","parse","fetchPostsByAuthor","authorId","getPostsByAuthor","posts","fetchPostsByCategory","categoryId","getPostsByCategory","fetchCategories","categories","addPost","post","Accept","authorization","id","addPostAndFetch","newPost","author","title","content","timestamp","deletePost","postId","deletePostAndFetch","err","setError","Input","label","value","maxLength","onInput","useState","isValid","setIsValid","touched","setTouched","className","required","onChange","e","target","validity","valid","onBlur","Select","options","defaultValue","map","key","Text","onUpdate","isTouched","AddPost","memo","props","postObj","setPostObj","categoriesId","useHistory","handleChange","length","val","onClick","parseInt","connect","users","errors","msg","setMsg","useEffect","timer","setTimeout","message","clearTimeout","AccountNav","logout","to","Header","Categories","category","DeletePostButton","onConfirm","canDelete","setCanDelete","Post","formatedTimestamp","moment","format","Posts","params","useParams","useDispatch","style","textAlign","children","useLocation","setUser","u","preventDefault","repassword","Unprotected","exact","path","component","Boolean","hostname","match","initialState","action","DELETE_POST_SUCCESS","RESET_ERROR","rootReducer","combineReducers","createStore","applyMiddleware","thunk","i","jwtPrivateKey","process","PRIVATE_KEY","lsKey","sign","obj","jwt","verify","success","protectedRoute","schema","request","cb","requestHeaders","Response","split","persist","contents","db","getTime","loadData","tte","ttd","opt","Server","seeds","server","models","Model","extend","routes","this","namespace","get","sort","a","b","Number","authors","filter","getPost","p","where","requestBody","newlyCreatedPost","insert","dump","delete","remove","decode","findBy","Object","keys","hashedPwd","bcryptjs","hashSync","newUser","nUser","signed","fetchUser","compare","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fab62201.chunk.js","sourcesContent":["const responseErrorHandler = (response) => {\n  if (!response.ok) {\n    throw response;\n  }\n  return response;\n};\n\nconst getToken = () =>\n  new Promise((resolve, reject) => {\n    try {\n      const getToken = window.localStorage.getItem(\"tinyThoughtsJWT\");\n      resolve({ token: getToken });\n    } catch {\n      reject();\n    }\n  });\n\nexport const getAllPosts = () =>\n  fetch(\"/api/posts\")\n    .then(responseErrorHandler)\n    .then((res) => res.json());\n\nexport const getPostsByAuthor = (authorId) =>\n  fetch(`/api/posts/author/${authorId}`)\n    .then(responseErrorHandler)\n    .then((res) => res.json());\n\nexport const getPostsByCategory = (categoryId) =>\n  fetch(`/api/posts/category/${categoryId}`)\n    .then(responseErrorHandler)\n    .then((res) => res.json());\n\nexport const getCategories = () =>\n  fetch(\"/api/categories\")\n    .then(responseErrorHandler)\n    .then((res) => res.json());\n\nexport const doSignIn = (email, password) =>\n  new Promise((resolve, reject) => {\n    return fetch(\"/api/signin\", {\n      method: \"POST\",\n      cache: \"no-cache\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password }),\n    })\n      .then(responseErrorHandler)\n      .then((res) => res.json())\n      .then((data) => {\n        const { token, user } = data;\n        window.localStorage.setItem(\"tinyThoughtsJWT\", token);\n        window.localStorage.setItem(\"tinyThoughtsUser\", JSON.stringify(user));\n        resolve(user);\n      })\n      .catch((error) => {\n        error.json().then(({ error }) => reject(error));\n      });\n  });\n\nexport const doSignUp = (name, email, password) =>\n  new Promise((resolve, reject) => {\n    return fetch(\"/api/signup\", {\n      method: \"POST\",\n      cache: \"no-cache\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ name, email, password, dateJoined: new Date() }),\n    })\n      .then(responseErrorHandler)\n      .then((res) => res.json())\n      .then((data) => {\n        const { token, user } = data;\n        window.localStorage.setItem(\"tinyThoughtsJWT\", token);\n        window.localStorage.setItem(\"tinyThoughtsUser\", JSON.stringify(user));\n        resolve(user);\n      })\n      .catch((error) => {\n        error.json().then(({ error }) => reject(error));\n      });\n  });\n\nexport const doSignOut = () =>\n  new Promise((resolve, reject) => {\n    try {\n      window.localStorage.removeItem(\"tinyThoughtsJWT\");\n      window.localStorage.removeItem(\"tinyThoughtsUser\");\n      resolve(true);\n    } catch {\n      reject(false);\n    }\n  });\n\nexport const initUser = () =>\n  new Promise((resolve, reject) => {\n    try {\n      const getToken = window.localStorage.getItem(\"tinyThoughtsJWT\");\n      const getUser = JSON.parse(\n        window.localStorage.getItem(\"tinyThoughtsUser\")\n      );\n      if (getToken) {\n        return fetch(\"/api/verify\", {\n          method: \"POST\",\n          cache: \"no-cache\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ token: getToken }),\n        })\n          .then(responseErrorHandler)\n          .then((res) => res.json())\n          .then(() => resolve(getUser))\n          .catch(() => {\n            window.localStorage.removeItem(\"tinyThoughtsJWT\");\n            window.localStorage.removeItem(\"tinyThoughtsUser\");\n            reject(\"User state could not be initialized\");\n          });\n      }\n    } catch {\n      resolve({});\n    }\n  });\n\nexport const addPostAndFetch = (post) =>\n  getToken()\n    .then(({ token }) =>\n      fetch(\"/api/posts\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n          authorization: `Bearer ${token}`,\n        },\n        cache: \"no-cache\",\n        body: JSON.stringify(post),\n      })\n    )\n    .then(responseErrorHandler)\n    .then((res) => res.json())\n    .then(({ id }) => fetch(`/api/posts/${id}`))\n    .then(responseErrorHandler)\n    .then((res) => res.json());\n\nexport const deletePostAndFetch = (postId) =>\n  getToken()\n    .then(({ token }) =>\n      fetch(`/api/posts/${postId}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n          authorization: `Bearer ${token}`,\n        },\n        cache: \"no-cache\",\n      })\n    )\n    .then(responseErrorHandler)\n    .then((res) => res.json())\n    .then(() => getAllPosts())\n","import {\r\n  addPostAndFetch,\r\n  deletePostAndFetch,\r\n  doSignIn,\r\n  doSignOut,\r\n  doSignUp,\r\n  getAllPosts,\r\n  getCategories,\r\n  getPostsByAuthor,\r\n  getPostsByCategory,\r\n  initUser,\r\n} from \"../../services\";\r\nexport const actionTypes = {\r\n  SIGNIN_SUCCESS: \"SIGNIN_SUCCESS\",\r\n  SIGNUP_SUCCESS: \"SIGNUP_SUCCESS\",\r\n  INIT_SUCCESS: \"INIT_SUCCESS\",\r\n  INIT_FAILURE: \"INIT_FAILURE\",\r\n  SIGNUP_FAILURE: \"SIGNUP_FAILURE\",\r\n  SIGNOUT_SUCCESS: \"SIGNOUT_SUCCESS\",\r\n  SIGNOUT_FAILURE: \"SIGNOUT_FAILURE\",\r\n  GET_POSTS_SUCCESS: \"GET_POSTS_SUCCESS\",\r\n  DELETE_POSTS_SUCCESS: \"DELETE_POSTS_SUCCESS\",\r\n  GET_CATEGORIES_SUCCESS: \"GET_CATEGORIES_SUCCESS\",\r\n  ADD_POST_SUCCESS: \"ADD_POST_SUCCESS\",\r\n  GET_POSTS_FAILURE: \"GET_POSTS_FAILURE\",\r\n  GET_CATEGORIES_FAILURE: \"GET_CATEGORIES_FAILURE\",\r\n  SIGNIN_FAILURE: \"SIGNIN_FAILURE\",\r\n  ADD_POST_FAILURE: \"ADD_POST_FAILURE\",\r\n  DELETE_POST_FAILURE: \"DELETE_POST_FAILURE\",\r\n  SET_ERROR_MESSAGE: \"SET_ERROR_MESSAGE\",\r\n};\r\n\r\nexport const signIn = (email, password, history, location) => (dispatch) => {\r\n  doSignIn(email, password)\r\n    .then((user) => {\r\n      if (user) {\r\n        dispatch({ type: actionTypes.SIGNIN_SUCCESS, user });\r\n        const { from } = location.state || { from: { pathname: \"/\" } };\r\n        history.replace(from);\r\n      } else {\r\n        dispatch({ type: actionTypes.SIGNIN_FAILURE, error: \"Signin failed\" });\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({ type: actionTypes.SIGNIN_FAILURE, error: error });\r\n    });\r\n};\r\n\r\nexport const signUp = (name, email, password, history) => (dispatch) => {\r\n  doSignUp(name, email, password)\r\n    .then((user) => {\r\n      dispatch({ type: actionTypes.SIGNUP_SUCCESS, user });\r\n      history.push(\"/\");\r\n    })\r\n    .catch((error) => {\r\n      dispatch({ type: actionTypes.SIGNUP_FAILURE, error: error });\r\n    });\r\n};\r\n\r\nexport const signOut = () => (dispatch) => {\r\n  doSignOut()\r\n    .then(() => dispatch({ type: actionTypes.SIGNOUT_SUCCESS }))\r\n    .catch(() =>\r\n      dispatch({ type: actionTypes.SIGNOUT_FAILURE, error: \"Signout failed\" })\r\n    );\r\n};\r\n\r\nexport const initUserState = () => (dispatch) => {\r\n  initUser()\r\n    .then((user) => dispatch({ type: actionTypes.INIT_SUCCESS, user }))\r\n    .catch((error) =>\r\n      dispatch({ type: actionTypes.INIT_FAILURE, error: error })\r\n    );\r\n};\r\n\r\nexport const fetchPosts = () => (dispatch) => {\r\n  getAllPosts()\r\n    .then((posts) =>\r\n      dispatch({ type: actionTypes.GET_POSTS_SUCCESS, posts: posts })\r\n    )\r\n    .catch((error) =>\r\n      dispatch({ type: actionTypes.GET_POSTS_FAILURE, error: error })\r\n    );\r\n};\r\n\r\nexport const fetchPostsByAuthor = (authorId) => (dispatch) => {\r\n  getPostsByAuthor(authorId)\r\n    .then((posts) => dispatch({ type: actionTypes.GET_POSTS_SUCCESS, posts: posts }))\r\n    .catch((error) =>\r\n      dispatch({ type: actionTypes.GET_POSTS_FAILURE, error: error })\r\n    );\r\n};\r\n\r\nexport const fetchPostsByCategory = (categoryId) => (dispatch) => {\r\n  getPostsByCategory(categoryId)\r\n    .then((posts) => dispatch({ type: actionTypes.GET_POSTS_SUCCESS, posts: posts }))\r\n    .catch((error) =>\r\n      dispatch({ type: actionTypes.GET_POSTS_FAILURE, error: error })\r\n    );\r\n};\r\n\r\nexport const fetchCategories = () => (dispatch) => {\r\n  getCategories()\r\n    .then((categories) =>\r\n      dispatch({ type: actionTypes.GET_CATEGORIES_SUCCESS, categories })\r\n    )\r\n    .catch((error) =>\r\n      dispatch({ type: actionTypes.GET_CATEGORIES_FAILURE, error: error })\r\n    );\r\n};\r\n\r\nexport const addPost = (post, history) => (dispatch) => {\r\n  addPostAndFetch(post)\r\n    .then((newPost) => {\r\n      const { author, title, content, categories, timestamp } = newPost;\r\n      dispatch({\r\n        type: actionTypes.ADD_POST_SUCCESS,\r\n        post: { author, title, categories, content, timestamp },\r\n      });\r\n      history.push(\"/\");\r\n    })\r\n    .catch((error) => {\r\n      dispatch({ type: actionTypes.ADD_POST_FAILURE, error: error });\r\n    });\r\n};\r\n\r\nexport const deletePost = (postId) => (dispatch) => {\r\n  deletePostAndFetch(postId)\r\n    .then((posts) =>\r\n      dispatch({ type: actionTypes.DELETE_POSTS_SUCCESS, posts })\r\n    )\r\n    .catch((err) => {\r\n      dispatch({ type: actionTypes.DELETE_POST_FAILURE, error: err });\r\n    });\r\n};\r\n\r\nexport const setError = (error) => (dispatch) => {\r\n  dispatch({ type: actionTypes.SET_ERROR_MESSAGE, error });\r\n};","import React, { useState } from \"react\";\n\nconst Input = ({ type, label, value, name, maxLength, onInput }) => {\n  const [isValid, setIsValid] = useState(true);\n  const [touched, setTouched] = useState(false);\n\n  const handleChange = (e) => {\n    setIsValid(e.target.validity.valid);\n    onInput(e);\n  };\n\n  const handleBlur = (e) => {\n    setTouched(true);\n  };\n\n  return (\n    <div className={`input-box ${touched && !isValid && \"hasError\"}`}>\n      <span className=\"label\">{label}</span>\n      <input\n        maxLength={maxLength}\n        required\n        type={type}\n        value={value}\n        name={name}\n        onChange={handleChange}\n        onBlur={handleBlur}\n      />\n    </div>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\n\nconst Select = ({ label, value, options, onChange }) => {\n  const handleChange = (e) => {\n    onChange(e.target.value);\n  };\n\n  return (\n    <div className=\"select-list\">\n      <span className=\"label\">{label}</span>\n      <select defaultValue={value} onChange={handleChange}>\n        <option>Select</option>\n        {options &&\n          options.map(({ id, title }) => (\n            <option key={id} value={id}>\n              {title}\n            </option>\n          ))}\n      </select>\n    </div>\n  );\n};\n\nexport default Select;\n","import React, { useState } from \"react\";\n\nconst Text = ({ label, name, value, onUpdate, maxLength = 200 }) => {\n  const [isValid, setIsValid] = useState(true);\n  const [touched, isTouched] = useState(false);\n\n  const handleChange = (e) => {\n    setIsValid(e.target.validity.valid);\n    const { name, value } = e.target;\n    const target = { name, value: value.replace(/(?:\\\\r)/g, \"\\\\n\\\\n\") };\n    onUpdate({ target });\n  };\n\n  const handleBlur = (e) => {\n    isTouched(true);\n  };\n\n  return (\n    <div className={`text-box ${touched && !isValid && \"hasError\"}`}>\n      <span className=\"label\">{label}</span>\n      <textarea\n        maxLength={maxLength}\n        required\n        name={name}\n        value={value}\n        onChange={handleChange}\n        onBlur={handleBlur}\n      />\n    </div>\n  );\n};\n\nexport default Text;\n","import React, { memo, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { addPost, setError } from \"../store/actions\";\nimport Input from \"./Input\";\nimport Select from \"./Select\";\nimport Text from \"./Text\";\n\nconst AddPost = memo((props) => {\n  \n  const [postObj, setPostObj] = useState({});\n  const { title = '', content = '', categoriesId = '' } = postObj;\n  const history = useHistory();  \n  const { categories = [] } = props;\n  const handleChange = (e) => {\n    setPostObj({...postObj, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    if (!title) {\n      props.setError('Please enter title');\n    } else if (!content) {\n      props.setError('Please enter content');\n    } else if (!categoriesId) {\n      props.setError('Please select a category');\n    } else {\n      const post = {\n        authorId: parseInt(props.author.id, 10),\n        title: postObj.title,\n        content: postObj.content,\n        categoriesId: postObj.categoriesId,\n        timestamp: new Date()\n      }\n      props.addPost(post, history);\n    }\n  }\n\n  const handleSelectChange = (val) => {\n    setPostObj({...postObj, 'categoriesId': val });\n  }\n\n  return (\n    <div className=\"add-post\">\n      <h2>New Post</h2>\n      <div className=\"add-post-form\">\n        <Input type=\"text\" label=\"Title\" value={title} name=\"title\" onInput={handleChange} />\n        <Text label=\"Type in your thoughts in 200 words or less\" value={content} onUpdate={handleChange} name=\"content\" />\n        <span className=\"char-count\">{content.length} of 200 Characters</span>\n        <Select label=\"Select a category\" options={categories} name=\"categoriesId\" onChange={handleSelectChange} value={categoriesId} />\n        <button id=\"add-post-btn\" onClick={handleSubmit}>+ Add</button>\n      </div>\n    </div>\n  );\n});\n\nconst mapStateToProps = (state) => ({\n  categories: state.posts.categories,\n  author: state.users\n});\n\nconst mapDispatcherToProps = () => (dispatch) => ({\n  addPost: (post, history) => dispatch(addPost(post, history)),\n  setError: (error) => dispatch(setError(error)),\n});\n\nexport default connect(mapStateToProps, mapDispatcherToProps)(AddPost);\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst ErrorPopup = ({ error }) => {\r\n  const [msg, setMsg] = useState('');\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setMsg('');\r\n    }, 5000);\r\n    if (error.message) {\r\n      setMsg(error.message);\r\n    }\r\n    return () => clearTimeout(timer);\r\n  },[error]);\r\n\r\n  return msg ? <div className=\"error-popup\">{msg}</div> : <></>;\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ error: state.errors });\r\n\r\nexport default connect(mapStateToProps)(ErrorPopup);","import React, { memo } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { signOut } from \"../store/actions\";\n\nconst AccountNav = memo((props) => {\n  const { user } = props;\n  \n  return (\n    <div className=\"account-nav\">\n      { user?.id && user?.name && <h4>{user?.name}</h4> }\n      <ul>\n        {user?.id ? (\n          <>\n            <li onClick={props.logout}>Signout</li>\n          </>\n        ) : (\n          <>\n            <Link to=\"/signin\">\n              <li>Signin</li>\n            </Link>\n            <Link to=\"/signup\">\n              <li>Signup</li>\n            </Link>\n          </>\n        )}\n      </ul>\n    </div>\n  );\n});\n\nconst mapStateToProps = (state) => ({\n  user: state.users\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  logout: () => dispatch(signOut())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountNav);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AccountNav from \"./AccountNav\";\n\nconst Header = ({ user }) => {\n  return (\n    <div className=\"header\">\n      <div className=\"app-title\">TinyThoughts</div>\n      <div className=\"app-nav\">\n        <ul>\n          <Link to=\"/\">\n            <li>Home</li>\n          </Link>\n          <Link to=\"/add\">\n            <li>New Post</li>\n          </Link>\n        </ul>\n      </div>\n      <AccountNav />\n    </div>\n  );\n};\n\nexport default Header;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Categories = ({ categories }) => {\n  return (\n    <ul className=\"sidebar\">\n      {categories &&\n        categories.map((category) => (\n          <Link key={category.id} to={`/category/${category.id}`}>\n            <li>{category.title}</li>\n          </Link>\n        ))}\n      <Link to=\"/\">\n        <li>All Posts</li>\n      </Link>\n    </ul>\n  );\n};\n\nexport default Categories;\n","import React, { useState } from \"react\";\n\nconst DeletePostButton = ({ onConfirm }) => {\n  const [canDelete, setCanDelete] = useState(false);\n\n  return (\n    <div className=\"delete-post-btn\">\n      {canDelete ? (\n        <>\n          <button onClick={() => onConfirm(true)}>Yes</button>\n          <button onClick={() => setCanDelete(false)}>No</button>\n        </>\n      ) : (\n        <button onClick={() => setCanDelete(true)}>Delete</button>\n      )}\n    </div>\n  );\n};\n\nexport default DeletePostButton;\n","import React, { memo } from \"react\";\nimport moment from \"moment\";\nimport DeletePostButton from \"./DeletePostButton\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { deletePost } from \"../store/actions\";\n\nconst Post = memo((props) => {\n  const { user = {}, post = {} } = props;\n  const formatedTimestamp = moment(post.timestamp).format(\n    \"dddd, MMMM Do YYYY, h:mm:ss a\"\n  );\n\n  const onDeleteConfirm = () => {\n    props.deletePost(post.id);\n  };\n\n  return (\n    <div className=\"post\">\n      <h1>{post.title}</h1>\n      {user?.id && user?.id === post?.author?.id && (\n        <DeletePostButton onConfirm={onDeleteConfirm} />\n      )}\n      <h3>\n        by{\" \"}\n        {post.author && (\n          <Link to={`/author/${post.author.id}`}>{post.author.name}</Link>\n        )}\n        |\n        {post.categories && (\n          <Link to={`/category/${post.categories.id}`}>\n            {post.categories.title}\n          </Link>\n        )}\n        |\n        Posted on {formatedTimestamp}\n      </h3>\n      <p>{post.content}</p>\n    </div>\n  );\n});\n\nconst mapStateToProps = (state) => ({\n  user: state.users,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  deletePost: (postId) => dispatch(deletePost(postId)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Post);\n","import React, { memo, useEffect } from \"react\";\nimport Categories from \"./Categories\";\nimport Post from \"./Post\";\nimport { useParams } from \"react-router-dom\";\nimport { connect, useDispatch } from \"react-redux\";\nimport {\n  fetchPosts,\n  fetchPostsByAuthor,\n  fetchPostsByCategory,\n} from \"../store/actions\";\n\nconst Posts = memo((props) => {\n  const { type, posts, categories } = props;\n  const params = useParams();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const { categoryId, authorId } = params;\n    if (type === \"author\") {\n      dispatch(fetchPostsByAuthor(authorId));\n    } else if (type === \"category\") {\n      dispatch(fetchPostsByCategory(categoryId));\n    } else {\n      dispatch(fetchPosts());\n    }\n  }, [type, params, dispatch]);\n\n  return (\n    <>\n      <div className=\"main\">\n        <Categories categories={categories} />\n        <div className=\"content\">\n          {posts && posts.length === 0 && (\n            <div className=\"post\" style={{ textAlign: \"center\" }}>\n              <h1>No posts to dispay</h1>\n            </div>\n          )}\n          {posts && posts.map((post) => <Post key={post.id} post={post} />)}\n        </div>\n      </div>\n    </>\n  );\n});\n\nconst mapStateToProps = (state) => ({\n  categories: state.posts.categories,\n  posts: state.posts.posts,\n});\n\nexport default connect(mapStateToProps)(Posts);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect, useLocation } from \"react-router-dom\";\n\nconst Protected = ({ user, children }) => {\n  const location = useLocation();\n  if (!user.id) return <Redirect to={{ pathname: \"/signin\", state: { from: location } }} />\n  else return <>{children}</>;\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.users,\n});\n\nexport default connect(mapStateToProps)(Protected);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { signIn } from \"../store/actions\";\nimport Input from \"./Input\";\n\nconst Signin = (props) => {\n  const [user, setUser] = useState({});\n  const location = useLocation();\n  const history = useHistory();\n\n  const { email = '', password = '' } = user;\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setUser(u => ({ ...u, [name]: value }));\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.signIn(email, password, history, location);\n  }\n\n  return (\n    <div className=\"sign-in\">\n      <h2>Signin</h2>\n      <div className=\"signin-form\">\n        <Input maxLength=\"100\" required type=\"email\" label=\"E-Mail\" value={email} name=\"email\" onInput={handleChange} />\n        <Input maxLength=\"30\" required type=\"password\" label=\"Password\" value={password} name=\"password\" onInput={handleChange} />\n        <button onClick={handleSubmit}>Go!</button>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  error: state.error\n});\nconst mapDispatchToProps = (dispatch) => ({\n  signIn: (email, password, history, location) => dispatch(signIn(email, password, history, location))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signin);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { setError, signUp } from \"../store/actions\";\nimport Input from \"./Input\";\n\nconst Signup = (props) => {\n  const [user, setUser] = useState({});\n  const history = useHistory();\n\n  const { name = '', email = '', password = '', repassword = '' } = user;\n  const handleChange = (e) => {\n    setUser({...user, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!name) {\n      props.setError(\"Please provide name\");\n    } else if (!email) {\n      props.setError(\"Please provide email\");\n    } else if(!password) {\n      props.setError(\"Please provide password\");\n    } else if (password !== repassword) {\n      props.setError(\"Password and Retyped Password didn't match\");\n    } else {\n      props.signUp(name, email, password, history);\n    }\n  }\n\n  return (\n    <div className=\"sign-up\">\n      <h2>Signup</h2>\n      <div className=\"signup-form\">\n        <Input type=\"text\" label=\"Name\" value={name} name=\"name\" onInput={handleChange} />\n        <Input type=\"email\" label=\"E-Mail\" value={email} name=\"email\" onInput={handleChange} />\n        <Input type=\"password\" label=\"Password\" value={password} name=\"password\" onInput={handleChange} />\n        <Input type=\"password\" label=\"Retype Password\" value={repassword} name=\"repassword\" onInput={handleChange} />\n        <button onClick={handleSubmit}>Done!</button>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = (dispatch) => ({\n  signUp: (name, email, password, history) => dispatch(signUp(name, email, password, history)),\n  setError: (error) => dispatch(setError(error))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);\n","import React, { memo } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nconst Unprotected = memo(({ user, children }) => {\n  if (user.id) return <Redirect to=\"/\" />;\n  else return <>{children}</>;\n});\n\nconst mapStateToProps = (state) => ({\n  user: state.users,\n});\n\nexport default connect(mapStateToProps)(Unprotected);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\nimport AddPost from \"./components/AddPost\";\nimport ErrorPopup from \"./components/ErrorPopup\";\nimport Header from \"./components/Header\";\nimport Posts from \"./components/Posts\";\nimport Protected from \"./components/Protected\";\nimport Signin from \"./components/Signin\";\nimport Signup from \"./components/Signup\";\nimport Unprotected from \"./components/Unprotected\";\nimport { fetchCategories, initUserState } from \"./store/actions\";\n\nconst App = (props) => {\n  useEffect(() => {\n    props.initUserState();\n    props.fetchCategories();\n  });\n\n  return (\n    <div className=\"app\">\n      <Header />\n      <Switch>\n        <Route exact path=\"/author/:authorId\">\n          <Posts type=\"author\" />\n        </Route>\n        <Route exact path=\"/category/:categoryId\">\n          <Posts type=\"category\" />\n        </Route>\n        <Route exact path=\"/signin\">\n          <Unprotected>\n            <Signin />\n          </Unprotected>\n        </Route>\n        <Route exact path=\"/signup\">\n          <Unprotected>\n            <Signup />\n          </Unprotected>\n        </Route>\n        <Route exact path=\"/add\">\n          <Protected>\n            <AddPost />\n          </Protected>\n        </Route>\n        <Route exact path=\"/\" component={Posts} />\n      </Switch>\n      <ErrorPopup />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({});\nconst mapDispatchToProps = (dispatch) => ({\n  initUserState: () => dispatch(initUserState()),\n  fetchCategories: () => dispatch(fetchCategories()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { actionTypes } from \"../actions\";\n\nconst initialState = {\n  posts: [],\n  categories: [],\n}\n\nconst posts = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.GET_POSTS_SUCCESS:\n    case actionTypes.DELETE_POSTS_SUCCESS:\n      return {\n      ...state,\n      posts: action.posts,\n      };\n    case actionTypes.GET_CATEGORIES_SUCCESS:\n      return {\n      ...state,\n        categories: action.categories,\n      };\n    case actionTypes.ADD_POST_SUCCESS:\n      return {\n      ...state,\n        posts: [action.post, ...state.posts],\n      };\n    default: return state;\n  }\n};\n\nexport default posts;\n","import { actionTypes } from \"../actions\";\n\nconst initialState = {};\n\nconst users = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SIGNIN_SUCCESS: \n    case actionTypes.SIGNUP_SUCCESS: \n    case actionTypes.INIT_SUCCESS: return { ...action.user };\n    case actionTypes.INIT_FAILURE: \n    case actionTypes.SIGNUP_FAILURE: \n    case actionTypes.SIGNOUT_SUCCESS: return {};\n    default: return state;\n  }\n};\n\nexport default users;\n","import { actionTypes } from \"../actions\";\n\nconst initialState = {\n  error: false,\n  message: \"\",\n};\nconst errors = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.GET_POSTS_FAILURE:\n    case actionTypes.GET_CATEGORIES_FAILURE:\n    case actionTypes.SIGNIN_FAILURE:\n    case actionTypes.SIGNUP_FAILURE:\n    case actionTypes.INIT_FAILURE:\n    case actionTypes.ADD_POST_FAILURE:\n    case actionTypes.DELETE_POST_FAILURE:\n    case actionTypes.SET_ERROR_MESSAGE:\n      return {\n        error: true,\n        message: action.error,\n      };\n    case actionTypes.GET_POSTS_SUCCESS:\n    case actionTypes.GET_CATEGORIES_SUCCESS:\n    case actionTypes.SIGNIN_SUCCESS:\n    case actionTypes.INIT_SUCCESS:\n    case actionTypes.ADD_POST_SUCCESS:\n    case actionTypes.DELETE_POST_SUCCESS:\n    case actionTypes.RESET_ERROR:\n      return { error: false, message: \"\" };\n    default:\n      return state;\n  }\n};\n\nexport default errors;\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { combineReducers } from \"redux\";\nimport posts from \"./reducers/posts\";\nimport users from \"./reducers/users\";\nimport errors from \"./reducers/errors\";\n\nconst rootReducer = combineReducers({\n  posts,\n  users,\n  errors\n});\nexport default createStore(rootReducer, applyMiddleware(thunk));\n","import { Model, Server, Response } from \"miragejs\";\nimport db from \"./db.json\";\nimport bcryptjs from \"bcryptjs\";\nimport jwt from \"jsonwebtoken\";\n\nconst jwtPrivateKey = process.env.PRIVATE_KEY || \"ChocolateDoughnuts\";\nconst lsKey = \"TinyThoughts_DataPersistence\";\n\nconst sign = (obj) =>\n  new Promise((resolve, reject) => {\n    jwt.sign(obj, jwtPrivateKey, (error, token) => {\n      if (error) return reject(error);\n\n      return resolve(token);\n    });\n  });\n\nconst verify = (token) =>\n  new Promise((resolve, reject) => {\n    jwt.verify(token, jwtPrivateKey, (error) => {\n      if (error) return reject();\n      return resolve({ success: true });\n    });\n  });\n\nconst protectedRoute = async (schema, request, cb) => {\n  const headers = request.requestHeaders;\n\n  if (!headers.authorization) {\n    return new Response(\n      401,\n      { \"content-type\": \"application/json\" },\n      { error: \"Missing authorization header in request\" }\n    );\n  }\n\n  const token = headers.authorization.split(\" \")[1];\n  const vrf = await verify(token);\n\n  if (!vrf) {\n    return new Response(\n      401,\n      { \"content-type\": \"application/json\" },\n      { error: \"Unauthorized\" }\n    );\n  }\n\n  return cb(schema, request);\n};\n\nconst persist = (contents) => {\n  window.localStorage.setItem(\n    lsKey,\n    JSON.stringify({ db: contents, timestamp: new Date().getTime() })\n  );\n};\n\nconst loadData = (tte) => {\n  if (!window.localStorage[lsKey]) {\n    return { db };\n  }\n\n  let ttd = JSON.parse(window.localStorage.getItem(lsKey));\n  let diff = (new Date().getTime() - ttd.timestamp) / 60000;\n\n  if (diff > tte) {\n    window.localStorage.removeItem(lsKey);\n    return {\n      db,\n    };\n  }\n\n  return ttd;\n};\n\nexport default (opt = { tte: 20 }) =>\n  new Server({\n    seeds(server) {\n      server.db.loadData(loadData(opt.tte).db);\n    },\n    models: {\n      posts: Model.extend(),\n      author: Model.extend(),\n      categories: Model.extend(),\n    },\n    routes() {\n      this.namespace = \"api\";\n      this.get(\"/categories\", (schema, request) => schema.db.categories);\n      this.get(\"/posts\", (schema, request) => {\n        return schema.db.posts\n          .sort((a, b) => Number(b.id) - Number(a.id))\n          .map((post) => {\n            return {\n              ...post,\n              author: schema.db.authors.filter(\n                (i) => Number(i.id) === Number(post.authorId)\n              )[0],\n              categories: schema.db.categories.filter(\n                (i) => Number(i.id) === Number(post.categoriesId)\n              )[0],\n            };\n          });\n      });\n\n      this.get(\"/posts/:id\", (schema, request) => {\n        const id = request.params.id;\n        const getPost = schema.db.posts.filter(\n          (p) => Number(p.id) === Number(id)\n        )[0];\n        return {\n          ...getPost,\n          author: schema.db.authors.filter(\n            (i) => Number(i.id) === Number(getPost.authorId)\n          )[0],\n          categories: schema.db.categories.filter(\n            (i) => Number(i.id) === Number(getPost.categoriesId)\n          )[0],\n        };\n      });\n\n      this.get(\"/posts/category/:id\", (schema, request) => {\n        const id = request.params.id;\n\n        return schema.db.posts.where({ categoriesId: id }).map((post) => {\n          return {\n            ...post,\n            author: schema.db.authors.filter(\n              (i) => Number(i.id) === Number(post.authorId)\n            )[0],\n            categories: schema.db.categories.filter(\n              (i) => Number(i.id) === Number(post.categoriesId)\n            )[0],\n          };\n        });\n      });\n\n      this.get(\"/posts/author/:id\", (schema, request) => {\n        const id = request.params.id;\n        return schema.db.posts.where({ authorId: id }).map((post) => {\n          return {\n            ...post,\n            author: schema.db.authors.filter(\n              (i) => Number(i.id) === Number(post.authorId)\n            )[0],\n            categories: schema.db.categories.filter(\n              (i) => Number(i.id) === Number(post.categoriesId)\n            )[0],\n          };\n        });\n      });\n\n      this.post(\"/posts\", (schema, request) =>\n        protectedRoute(schema, request, async (schema, request) => {\n          const newPost = JSON.parse(request.requestBody);\n          const newlyCreatedPost = schema.db.posts.insert(newPost);\n          persist(schema.db.dump());\n          return {\n            id: newlyCreatedPost.id,\n          };\n        })\n      );\n\n      this.delete(\"/posts/:id\", (schema, request) =>\n        protectedRoute(schema, request, (schema, request) => {\n          const id = request.params.id;\n          schema.db.posts.remove({ id });\n          persist(schema.db.dump());\n          return { message: true };\n        })\n      );\n\n      this.post(\"/verify\", async (schema, request) => {\n        const { token } = JSON.parse(request.requestBody);\n        const user = jwt.decode(token);\n        const fetchUser = await schema.db.authors.findBy({ email: user.email });\n\n        if (!fetchUser) {\n          return new Response(\n            401,\n            { \"content-type\": \"application/json\" },\n            { error: \"Unauthorized\" }\n          );\n        }\n        return await verify(token);\n      });\n\n      this.post(\"/signup\", async (schema, request) => {\n        if (\n          JSON.stringify(Object.keys(JSON.parse(request.requestBody))) !==\n          JSON.stringify([\"name\", \"email\", \"password\", \"dateJoined\"])\n        ) {\n          return new Response(\n            401,\n            { \"content-type\": \"application/json\" },\n            { error: \"Data missing in request\" }\n          );\n        }\n\n        const { email, password, ...user } = JSON.parse(request.requestBody);\n        const fetchUser = schema.db.authors.findBy({ email });\n\n        if (fetchUser) {\n          return new Response(\n            401,\n            { \"content-type\": \"application/json\" },\n            { error: \"User already exists\" }\n          );\n        }\n\n        const hashedPwd = bcryptjs.hashSync(password, 10);\n        const newUser = {\n          password: hashedPwd,\n          email,\n          ...user,\n        };\n\n        const nUser = schema.db.authors.insert(newUser);\n        persist(schema.db.dump());\n        const signed = await sign({\n          id: nUser.id,\n          name: nUser.name,\n          email: nUser.email,\n        });\n\n        return { token: signed, user: { id: nUser.id, name: nUser.name } };\n      });\n\n      this.post(\"/signin\", async (schema, request) => {\n        const body = JSON.parse(request.requestBody);\n\n        if (body.email && body.password) {\n          const fetchUser = schema.db.authors.findBy({ email: body.email });\n          if (fetchUser) {\n            const compPass = await bcryptjs.compare(\n              body.password,\n              fetchUser.password\n            );\n            if (!compPass) {\n              return new Response(\n                401,\n                { \"content-type\": \"application/json\" },\n                { error: \"Incorrect password\" }\n              );\n            }\n\n            const token = await sign({\n              id: fetchUser.id,\n              name: fetchUser.name,\n              email: fetchUser.email,\n              dateJoined: fetchUser.dateJoined,\n            });\n\n            return { token, user: { id: fetchUser.id, name: fetchUser.name } };\n          } else {\n            return new Response(\n              401,\n              { \"content-type\": \"application/json\" },\n              { error: \"Incorrect password\" }\n            );\n          }\n        }\n      });\n    },\n  });\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter as BrowserRouter } from \"react-router-dom\";\nimport store from \"./store\";\nimport server from \"./server\";\n\nserver({ tte: 20 }); // Set tte in mins to expire the persistence store\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n    </Provider>\n    ,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}